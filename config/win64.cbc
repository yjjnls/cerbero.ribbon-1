__dir__      = os.path.abspath( os.path.dirname(__file__) )
__cerberus__ = os.path.abspath( os.path.join( __dir__,'../..'))
__cerbero__  = os.path.join(__cerberus__,'cerbero.hacks')


from cerbero.config import Architecture
from cerbero.config import Architecture,Platform

arch = Architecture.X86_64
target_arch = Architecture.X86_64
platform=Platform.WINDOWS
target_platform=Platform.WINDOWS



prefix='c:/cerbrus/%s'%arch
home_dir='c:/cerbrus/build'
build_tools_prefix= '%s/build-tools/w64'%home_dir
toolchain_prefix ='%s/mingw/w64'%home_dir 


_bprefix='%s/build/%s_%s'%(__cerberus__,platform,arch)
cache_file = '%s_%s.cache'%(platform,arch)
logs ='%s/logs'%_bprefix
sources ='%s/sources'%_bprefix

build_tools_sources = '%s/build_tools/sources'%_bprefix
build_tools_cache ='build-tools-%s_%s.cache'%(platform,arch)

cached_sources = os.path.join( __cerberus__ ,'cache/sources' )

recipes_dir = os.path.join( __cerbero__ ,'recipes' )
external_recipes = {
    'gstreamer':( os.path.join( __cerberus__,'cerbero.gstreamer/recipes'), -1 )
}
packages_dir = os.path.join( __cerbero__ ,'packages' )
external_packages = {
    'gstreamer':( os.path.join( __cerberus__,'cerbero.gstreamer/packages'), -1 )
}

#from cerbero.config import Architecture,Platform
#rootd=os.path.abspath( os.path.dirname(__file__)+'/..')
#prefix=os.path.join(rootd,'x86_64')
#from cerbero.config import Architecture
#arch = Architecture.X86_64
#target_arch = Architecture.X86_64
#platform=Platform.WINDOWS
#target_platform=Platform.WINDOWS
#cache_file = 'wms-%s_%sd.cache'%(platform,arch)
#build_type='debug'
#prefix +='d'
#
#
#logs ='%s/logs/%s_%sd'%(home_dir,platform,arch)
#sources ='%s/sources/%s_%sd'%(home_dir,platform,arch)
